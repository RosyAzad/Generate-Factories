{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/rosyazad/code/root/imports/api/factories.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/api/factories.js","filename":"/Users/rosyazad/code/root/imports/api/factories.js","passPerPreset":false,"envName":"development","cwd":"/Users/rosyazad/code/root","root":"/Users/rosyazad/code/root","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/rosyazad/code/root/imports/api/factories.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/factories.js"}},"code":"module.export({\n  Factories: function () {\n    return Factories;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 1);\nvar check;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  }\n}, 2);\nvar Factories = new Mongo.Collection('factories');\nMeteor.methods({\n  'factories.remove': function (factoryId) {\n    check(factoryId, String);\n    var task = Factories.findOne(factoryId); // if (task.private && task.owner !== this.userId) {\n    //     // If the task is private, make sure only the owner can delete it\n    //     throw new Meteor.Error('not-authorized');\n    // }\n    //factoryIds =factoryId+\"dew\";\n\n    Factories.remove(factoryId);\n  },\n  'factories.insert': function (text) {\n    //check(text, String);\n    // Make sure the user is logged in before inserting a task\n    // if (! this.userId) {\n    //     throw new Meteor.Error('not-authorized');\n    // }\n    Factories.insert({\n      path: '/root',\n      type: 'folder',\n      isRoot: true,\n      children: ['/root/david', '/root/jslancer']\n    }); //const rootNode = Factories.findOne('\"NT3PZRMBbkMHu2Dqj');\n    //Factories.update(\"NT3PZRMBbkMHu2Dqj\", { $set: { priority: priorityNumber } });\n\n    Factories.insert({\n      path: '/root/david',\n      type: 'folder',\n      children: ['/root/david/1', '/root/david/2', '/root/david/3']\n    });\n    Factories.insert({\n      path: '/root/david/1',\n      type: 'file'\n    });\n    Factories.insert({\n      path: '/root/david/2',\n      type: 'file'\n    });\n    Factories.insert({\n      path: '/root/david/3',\n      type: 'file'\n    });\n    Factories.insert({\n      path: '/root/jslancer',\n      type: 'folder',\n      children: ['/root/jslancer/132', '/root/jslancer/12']\n    });\n    Factories.insert({\n      path: '/root/jslancer/132',\n      type: 'file'\n    });\n    Factories.insert({\n      path: '/root/jslancer/12',\n      type: 'file'\n    });\n  }\n});","map":{"version":3,"sources":["imports/api/factories.js"],"names":["module","export","Factories","Meteor","link","v","Mongo","check","Collection","methods","factoryId","String","task","findOne","remove","text","insert","path","type","isRoot","children"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,SAAS,EAAC;AAAA,WAAIA,SAAJ;AAAA;AAAX,CAAd;AAAyC,IAAIC,MAAJ;AAAWH,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACD,EAAAA,MAAD,YAAQE,CAAR,EAAU;AAACF,IAAAA,MAAM,GAACE,CAAP;AAAS;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,KAAJ;AAAUN,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACE,EAAAA,KAAD,YAAOD,CAAP,EAAS;AAACC,IAAAA,KAAK,GAACD,CAAN;AAAQ;AAAlB,CAA3B,EAA+C,CAA/C;AAAkD,IAAIE,KAAJ;AAAUP,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACG,EAAAA,KAAD,YAAOF,CAAP,EAAS;AAACE,IAAAA,KAAK,GAACF,CAAN;AAAQ;AAAlB,CAA3B,EAA+C,CAA/C;AAKxK,IAAMH,SAAS,GAAG,IAAII,KAAK,CAACE,UAAV,CAAqB,WAArB,CAAlB;AAEPL,MAAM,CAACM,OAAP,CAAe;AACX,oBADW,YACQC,SADR,EACmB;AAC1BH,IAAAA,KAAK,CAACG,SAAD,EAAYC,MAAZ,CAAL;AAEA,QAAMC,IAAI,GAAGV,SAAS,CAACW,OAAV,CAAkBH,SAAlB,CAAb,CAH0B,CAI1B;AACA;AACA;AACA;AAEA;;AACAR,IAAAA,SAAS,CAACY,MAAV,CAAiBJ,SAAjB;AACH,GAZU;AAaX,oBAbW,YAaQK,IAbR,EAac;AACrB;AAEA;AACA;AACA;AACA;AAEAb,IAAAA,SAAS,CAACc,MAAV,CAAiB;AACbC,MAAAA,IAAI,EAAE,OADO;AAEbC,MAAAA,IAAI,EAAE,QAFO;AAGbC,MAAAA,MAAM,EAAE,IAHK;AAIbC,MAAAA,QAAQ,EAAE,CAAC,aAAD,EAAgB,gBAAhB;AAJG,KAAjB,EARqB,CAerB;AACA;;AACAlB,IAAAA,SAAS,CAACc,MAAV,CAAiB;AACbC,MAAAA,IAAI,EAAE,aADO;AAEbC,MAAAA,IAAI,EAAE,QAFO;AAGbE,MAAAA,QAAQ,EAAE,CAAC,eAAD,EAAkB,eAAlB,EAAmC,eAAnC;AAHG,KAAjB;AAKAlB,IAAAA,SAAS,CAACc,MAAV,CAAiB;AACbC,MAAAA,IAAI,EAAE,eADO;AAEbC,MAAAA,IAAI,EAAE;AAFO,KAAjB;AAIAhB,IAAAA,SAAS,CAACc,MAAV,CAAiB;AACbC,MAAAA,IAAI,EAAE,eADO;AAErBC,MAAAA,IAAI,EAAE;AAFe,KAAjB;AAIAhB,IAAAA,SAAS,CAACc,MAAV,CAAiB;AACbC,MAAAA,IAAI,EAAE,eADO;AAEbC,MAAAA,IAAI,EAAE;AAFO,KAAjB;AAIAhB,IAAAA,SAAS,CAACc,MAAV,CAAiB;AACbC,MAAAA,IAAI,EAAE,gBADO;AAEbC,MAAAA,IAAI,EAAE,QAFO;AAGbE,MAAAA,QAAQ,EAAE,CAAC,oBAAD,EAAuB,mBAAvB;AAHG,KAAjB;AAKAlB,IAAAA,SAAS,CAACc,MAAV,CAAiB;AACbC,MAAAA,IAAI,EAAE,oBADO;AAErBC,MAAAA,IAAI,EAAE;AAFe,KAAjB;AAIAhB,IAAAA,SAAS,CAACc,MAAV,CAAiB;AACbC,MAAAA,IAAI,EAAE,mBADO;AAEbC,MAAAA,IAAI,EAAE;AAFO,KAAjB;AAIH;AA5DU,CAAf","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\n \nexport const Factories = new Mongo.Collection('factories');\n\nMeteor.methods({\n    'factories.remove'(factoryId) {\n        check(factoryId, String);\n\n        const task = Factories.findOne(factoryId);\n        // if (task.private && task.owner !== this.userId) {\n        //     // If the task is private, make sure only the owner can delete it\n        //     throw new Meteor.Error('not-authorized');\n        // }\n\n        //factoryIds =factoryId+\"dew\";\n        Factories.remove(factoryId);\n    },\n    'factories.insert'(text) {\n        //check(text, String);\n\n        // Make sure the user is logged in before inserting a task\n        // if (! this.userId) {\n        //     throw new Meteor.Error('not-authorized');\n        // }\n\n        Factories.insert({\n            path: '/root',\n            type: 'folder',\n            isRoot: true,\n            children: ['/root/david', '/root/jslancer'],\n        });\n\n        //const rootNode = Factories.findOne('\"NT3PZRMBbkMHu2Dqj');\n        //Factories.update(\"NT3PZRMBbkMHu2Dqj\", { $set: { priority: priorityNumber } });\n        Factories.insert({\n            path: '/root/david',\n            type: 'folder',\n            children: ['/root/david/1', '/root/david/2', '/root/david/3'],\n        });\n        Factories.insert({\n            path: '/root/david/1',\n            type: 'file'\n        });\n        Factories.insert({\n            path: '/root/david/2',\n    type: 'file'\n        });\n        Factories.insert({\n            path: '/root/david/3',\n            type: 'file'\n        });\n        Factories.insert({\n            path: '/root/jslancer',\n            type: 'folder',\n            children: ['/root/jslancer/132', '/root/jslancer/12'],\n        });\n        Factories.insert({\n            path: '/root/jslancer/132',\n    type: 'file'\n        });\n        Factories.insert({\n            path: '/root/jslancer/12',\n            type: 'file'\n        });\n    },\n})\n\n"]},"sourceType":"script","hash":"4fa3b72ffdd4d5d46d573f8c0e8f96ab3376d662"}
