{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/rosyazad/code/root/imports/ui/Tree.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/ui/Tree.js","filename":"/Users/rosyazad/code/root/imports/ui/Tree.js","passPerPreset":false,"envName":"development","cwd":"/Users/rosyazad/code/root","root":"/Users/rosyazad/code/root","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/rosyazad/code/root/imports/ui/Tree.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/Tree.js"}},"code":"module.export({\n  Tree: () => Tree\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet values;\nmodule.link(\"lodash/values\", {\n  default(v) {\n    values = v;\n  }\n\n}, 1);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 2);\nlet TreeNodeNew;\nmodule.link(\"./TreeNodeNew\", {\n  default(v) {\n    TreeNodeNew = v;\n  }\n\n}, 3);\nlet Menu, Item, Separator, Submenu, MenuProvider;\nmodule.link(\"react-contexify\", {\n  Menu(v) {\n    Menu = v;\n  },\n\n  Item(v) {\n    Item = v;\n  },\n\n  Separator(v) {\n    Separator = v;\n  },\n\n  Submenu(v) {\n    Submenu = v;\n  },\n\n  MenuProvider(v) {\n    MenuProvider = v;\n  }\n\n}, 4);\nlet CustomMenu;\nmodule.link(\"./CustomMenu\", {\n  default(v) {\n    CustomMenu = v;\n  }\n\n}, 5);\nlet ContextMenuNew;\nmodule.link(\"./ContextMenuNew\", {\n  default(v) {\n    ContextMenuNew = v;\n  }\n\n}, 6);\nlet withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 7);\nlet Factories;\nmodule.link(\"../api/factories.js\", {\n  Factories(v) {\n    Factories = v;\n  }\n\n}, 8);\nconst data = {\n  '/root': {\n    path: '/root',\n    type: 'folder',\n    isRoot: true,\n    children: ['/root/david', '/root/jslancer']\n  },\n  '/root/david': {\n    path: '/root/david',\n    type: 'folder',\n    children: ['/root/david/1', '/root/david/2', '/root/david/3']\n  },\n  '/root/david/1': {\n    path: '/root/david/1',\n    type: 'file'\n  },\n  '/root/david/2': {\n    path: '/root/david/2',\n    type: 'file'\n  },\n  '/root/david/3': {\n    path: '/root/david/3',\n    type: 'file'\n  },\n  '/root/jslancer': {\n    path: '/root/jslancer',\n    type: 'folder',\n    children: ['/root/jslancer/132', '/root/jslancer/12']\n  },\n  '/root/jslancer/132': {\n    path: '/root/jslancer/132',\n    type: 'file'\n  },\n  '/root/jslancer/12': {\n    path: '/root/jslancer/12',\n    type: 'file'\n  }\n}; // const onClick = ({ event, props }) => {\n//   console.log(event, props);\n//   console.log(props);\n// }\n// // create your menu first\n// const MyAwesomeMenu = (props) => {\n//   const { node } = props;\n//   return (\n//     <Menu node={node} id='menu_id' style={{ border: '1px solid purple', display: 'inline-block' }}>\n//       <Item node={node} onClick={(event, node) => onClick(event, node)}>Lorem</Item>\n//       <Item onClick={onClick}>Ipsum</Item>\n//       <Separator />\n//       <Item disabled>Dolor</Item>\n//       <Separator />\n//       <Submenu label=\"Foobar\">\n//         <Item onClick={onClick}>Foo</Item>\n//         <Item onClick={onClick}>Bar</Item>\n//       </Submenu>\n//     </Menu>\n//   )\n// };\n\nclass Tree extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getRootNodes = () => {\n      //const { nodes } = this.state;\n      const {\n        nodes\n      } = this.props.factories; //const result = values(this.props.factories).filter(node => node.isRoot === true);\n      // var factories ={};\n      // for(var i = 0; i< this.props.factories.length; i++){\n      //   factories\n      // }\n\n      this.setState = {\n        nodes: this.props.factories\n      };\n      const result = values(this.props.factories).filter(node => node.isRoot);\n      return result;\n    };\n\n    this.getChildNodes = node => {\n      this.setState = {\n        nodes: this.props.factories\n      };\n      const nodes = this.setState.nodes;\n      if (!node.children) return []; //const result= node.children.map(path => nodes[path].path);\n      else //const childrenCount = node.children.length;\n        var result = [];\n      node.children.forEach((child, index) => {\n        //return arr[index] =  * 2num;\n        for (var i = 0; i < nodes.length; i++) {\n          console.log(\"i :\" + i);\n\n          if (nodes[i].path == child) {\n            result.push(nodes[i]);\n          }\n        }\n      });\n      return result;\n    };\n\n    this.onToggle = node => {\n      const {\n        nodes\n      } = this.state;\n      nodes[node.path].isOpen = !node.isOpen;\n      this.setState({\n        nodes\n      });\n    };\n\n    this.onNodeSelect = node => {\n      const {\n        onSelect\n      } = this.props;\n      this.setState = {\n        nodeType: node.type //onSelect(node);\n\n      };\n      return node;\n    };\n\n    this.setMenuProperties = (event, node) => {\n      const {\n        nodes\n      } = this.state;\n      const clientX = event.clientX;\n      const clientY = event.clientY;\n      nodes[node.path].isClicked = true;\n      this.setState = {\n        nodes: nodes,\n        clientX: clientX,\n        clientY: clientY,\n        isClicked: true,\n        nodeType: node.type\n      };\n      return state; //  this.setState({\n      //      clicked: true,\n      //      displayMenu: true,\n      //      clientX: event.clientX,\n      //      clientY: event.clientY,\n      //      nodeType: node.type,\n      //      nodeName: getNodeLabel(node)\n      //  });\n    };\n\n    this.state = {\n      nodes: {} // clientX: undefined,\n      // clientY: undefined,\n      // isClicked: false\n      // displayMenu: false,\n      // clientX: 0,\n      // clientY: 0,\n      // nodeType: \"\"\n      // this.setMenuProperties = this.setMenuProperties.bind(this);\n\n    };\n  } // state = {\n  //   nodes: data,\n  // };\n\n\n  componentDidMount() {\n    this.setState = {\n      nodes: this.props.factories\n    };\n    const result = this.props.factories.filter(node => node.isRoot);\n    if (!result) Meteor.call('factories.insertRoot', data._id);\n  }\n\n  // setMenuProperties = (event, node) => {\n  //   //if(this.state.displayMenu === true){\n  //   this.setState=({\n  //     displayMenu: true,\n  //     clientX: event.clientX,\n  //     clientY: event.clientY,\n  //     nodeType: node.type\n  //   });\n  // //}\n  //   console.log(\"event\" + event);\n  //  // return false;\n  // }\n  render() {\n    const rootNodes = this.getRootNodes();\n    return React.createElement(React.Fragment, null, rootNodes.map(node => React.createElement(\"div\", null, React.createElement(TreeNodeNew // onClick ={this.setMenuProperties(event, this.onNodeSelect(rootNodes[0]))}\n    , {\n      displayMenu: this.state.displayMenu,\n      node: node,\n      getChildNodes: this.getChildNodes,\n      onToggle: this.onToggle,\n      onNodeSelect: this.onNodeSelect,\n      setMenuProperties: this.setMenuProperties\n    }), React.createElement(ContextMenuNew, null)) // </div>\n    ));\n  }\n\n}\n\nTree.propTypes = {\n  onSelect: PropTypes.func.isRequired\n};\nmodule.exportDefault(withTracker(() => {\n  return {\n    factories: Factories.find({}).fetch(),\n    items: Factories.find({}).fetch()\n  };\n})(Tree));","map":{"version":3,"sources":["imports/ui/Tree.js"],"names":["module","export","Tree","React","Component","link","default","v","values","PropTypes","TreeNodeNew","Menu","Item","Separator","Submenu","MenuProvider","CustomMenu","ContextMenuNew","withTracker","Factories","data","path","type","isRoot","children","constructor","props","getRootNodes","nodes","factories","setState","result","filter","node","getChildNodes","forEach","child","index","i","length","console","log","push","onToggle","state","isOpen","onNodeSelect","onSelect","nodeType","setMenuProperties","event","clientX","clientY","isClicked","componentDidMount","Meteor","call","_id","render","rootNodes","map","displayMenu","propTypes","func","isRequired","exportDefault","find","fetch","items"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport values from 'lodash/values';\nimport PropTypes from 'prop-types';\n\nimport TreeNodeNew from './TreeNodeNew';\n//import ClickHandler from './ClickHandler';\nimport { Menu, Item, Separator, Submenu, MenuProvider } from 'react-contexify';\n//import 'react-contexify/dist/ReactContexify.min.css';\nimport CustomMenu from './CustomMenu';\nimport ContextMenuNew from './ContextMenuNew';\n\nimport { withTracker } from 'meteor/react-meteor-data';\n \nimport { Factories } from '../api/factories.js';\n\nconst data = {\n  '/root': {\n    path: '/root',\n    type: 'folder',\n    isRoot: true,\n    children: ['/root/david', '/root/jslancer'],\n  },\n  '/root/david': {\n    path: '/root/david',\n    type: 'folder',\n    children: ['/root/david/1', '/root/david/2', '/root/david/3'],\n  },\n  '/root/david/1': {\n    path: '/root/david/1',\n    type: 'file'\n  },\n  '/root/david/2': {\n    path: '/root/david/2',\n    type: 'file'\n  },\n  '/root/david/3': {\n    path: '/root/david/3',\n    type: 'file'\n  },\n  '/root/jslancer': {\n    path: '/root/jslancer',\n    type: 'folder',\n    children: ['/root/jslancer/132', '/root/jslancer/12'],\n  },\n  '/root/jslancer/132': {\n    path: '/root/jslancer/132',\n    type: 'file'\n  },\n  '/root/jslancer/12': {\n    path: '/root/jslancer/12',\n    type: 'file'\n  },\n};\n\n// const onClick = ({ event, props }) => {\n//   console.log(event, props);\n//   console.log(props);\n// }\n// // create your menu first\n// const MyAwesomeMenu = (props) => {\n//   const { node } = props;\n//   return (\n\n//     <Menu node={node} id='menu_id' style={{ border: '1px solid purple', display: 'inline-block' }}>\n//       <Item node={node} onClick={(event, node) => onClick(event, node)}>Lorem</Item>\n//       <Item onClick={onClick}>Ipsum</Item>\n//       <Separator />\n//       <Item disabled>Dolor</Item>\n//       <Separator />\n//       <Submenu label=\"Foobar\">\n//         <Item onClick={onClick}>Foo</Item>\n//         <Item onClick={onClick}>Bar</Item>\n//       </Submenu>\n//     </Menu>\n//   )\n// };\n\nexport  class Tree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: {},\n      // clientX: undefined,\n      // clientY: undefined,\n      // isClicked: false\n      // displayMenu: false,\n      // clientX: 0,\n      // clientY: 0,\n      // nodeType: \"\"\n    }\n    // this.setMenuProperties = this.setMenuProperties.bind(this);\n  }\n\n  // state = {\n  //   nodes: data,\n  // };\n\n  componentDidMount() {\n    this.setState = ({\n      nodes: this.props.factories\n    });\n    const result = (this.props.factories).filter(node => node.isRoot);\n    if(!result)\n    Meteor.call('factories.insertRoot', data._id);\n  }\n\n  getRootNodes = () => {\n    //const { nodes } = this.state;\n    const { nodes } = this.props.factories;\n    //const result = values(this.props.factories).filter(node => node.isRoot === true);\n \n    // var factories ={};\n    // for(var i = 0; i< this.props.factories.length; i++){\n    //   factories\n    // }\n\n    this.setState =({\n      nodes: this.props.factories\n    })\n    const result = values(this.props.factories).filter(node => node.isRoot);\n    return result;\n  }\n\n  getChildNodes = (node) => {\n    this.setState = ({\n      nodes: this.props.factories\n    })\n    const  nodes  = this.setState.nodes;\n    if (!node.children) return [];\n    //const result= node.children.map(path => nodes[path].path);\n    else\n    //const childrenCount = node.children.length;\n    var result= [];\n    node.children.forEach((child, index) => \n    {\n      //return arr[index] =  * 2num;\n      for(var i = 0; i<nodes.length; i++)\n      {\n        console.log(\"i :\" + i);\n        if(nodes[i].path == child){\n          result.push(nodes[i]);\n        }\n      }\n  });\n    return result;\n  }\n\n  onToggle = (node) => {\n    const { nodes } = this.state;\n    nodes[node.path].isOpen = !node.isOpen;\n    this.setState({ nodes });\n  }\n\n  onNodeSelect = node => {\n    const { onSelect } = this.props;\n    this.setState = { nodeType: node.type }\n    //onSelect(node);\n    return node;\n  }\n\n\n  setMenuProperties = (event, node) => {\n    const { nodes } = this.state;\n    const clientX = event.clientX;\n    const clientY = event.clientY;\n    nodes[node.path].isClicked = true;\n    this.setState = {\n      nodes: nodes,\n      clientX: clientX,\n      clientY: clientY,\n      isClicked: true,\n      nodeType: node.type\n\n    };\n    return state;\n    //  this.setState({\n    //      clicked: true,\n    //      displayMenu: true,\n    //      clientX: event.clientX,\n    //      clientY: event.clientY,\n    //      nodeType: node.type,\n    //      nodeName: getNodeLabel(node)\n    //  });\n  }\n\n\n\n  // setMenuProperties = (event, node) => {\n  //   //if(this.state.displayMenu === true){\n  //   this.setState=({\n  //     displayMenu: true,\n  //     clientX: event.clientX,\n  //     clientY: event.clientY,\n  //     nodeType: node.type\n  //   });\n  // //}\n  //   console.log(\"event\" + event);\n  //  // return false;\n  // }\n\n  render() {\n    const rootNodes = this.getRootNodes();\n    return (\n      <React.Fragment>\n\n        {\n\n\n          rootNodes.map(node => (\n\n            <div>\n              {/* <div onContextMenu={this.setMenuProperties(event, this.onNodeSelect(node))}> */}\n                <TreeNodeNew\n                  // onClick ={this.setMenuProperties(event, this.onNodeSelect(rootNodes[0]))}\n                  displayMenu={this.state.displayMenu}\n                  node={node}\n                  getChildNodes={this.getChildNodes}\n                  onToggle={this.onToggle}\n                  onNodeSelect={this.onNodeSelect}\n                  setMenuProperties={this.setMenuProperties}\n\n\n                />\n\n                \n                {/* <CustomMenu\n                  //node={node}\n                  // nodeType={this.state.nodeType}\n                  // onNodeSelect={this.onNodeSelect}\n                  // getChildNodes={this.getChildNodes}\n                   clientX = 'undefined'\n                   clientY = 'undefined'\n                   nodeType='folder'\n                />  */}\n\n                <ContextMenuNew />\n\n              </div>\n\n\n            // </div>\n\n\n\n\n          ))}\n        {/* <div>\n     \n              <CustomMenu\n                //node={node}\n                nodeType={this.state.nodeType}\n                onNodeSelect={this.onNodeSelect}\n                getChildNodes={this.getChildNodes}\n                clientX={this.state.clientX}\n                clientY={this.state.clientY}\n                type={this.type} /> \n\n          </div> */}\n        {/* </div> */}\n      </React.Fragment>\n\n    )\n  }\n}\n\nTree.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n};\nexport default withTracker(() => {\n  return {\n    factories: Factories.find({}).fetch(),\n    items: Factories.find({}).fetch(),\n  };\n  \n})(Tree);\n\n"]},"sourceType":"script","hash":"4c6627ece6915c54918884dc427407f2d4abeff3"}
