{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/rosyazad/code/root/imports/ui/Tree.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/ui/Tree.js","filename":"/Users/rosyazad/code/root/imports/ui/Tree.js","passPerPreset":false,"envName":"development","cwd":"/Users/rosyazad/code/root","root":"/Users/rosyazad/code/root","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/rosyazad/code/root/imports/ui/Tree.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/Tree.js"}},"code":"module.export({\n  default: () => Tree\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet values;\nmodule.link(\"lodash/values\", {\n  default(v) {\n    values = v;\n  }\n\n}, 1);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 2);\nlet TreeNodeNew;\nmodule.link(\"./TreeNodeNew\", {\n  default(v) {\n    TreeNodeNew = v;\n  }\n\n}, 3);\nlet Menu, Item, Separator, Submenu, MenuProvider;\nmodule.link(\"react-contexify\", {\n  Menu(v) {\n    Menu = v;\n  },\n\n  Item(v) {\n    Item = v;\n  },\n\n  Separator(v) {\n    Separator = v;\n  },\n\n  Submenu(v) {\n    Submenu = v;\n  },\n\n  MenuProvider(v) {\n    MenuProvider = v;\n  }\n\n}, 4);\nlet CustomMenu;\nmodule.link(\"./CustomMenu\", {\n  default(v) {\n    CustomMenu = v;\n  }\n\n}, 5);\nconst data = {\n  '/root': {\n    path: '/root',\n    type: 'folder',\n    isRoot: true,\n    children: ['/root/david', '/root/jslancer']\n  },\n  '/root/david': {\n    path: '/root/david',\n    type: 'folder',\n    children: ['/root/david/1', '/root/david/2', '/root/david/3']\n  },\n  '/root/david/1': {\n    path: '/root/david/1',\n    type: 'file'\n  },\n  '/root/david/2': {\n    path: '/root/david/2',\n    type: 'file'\n  },\n  '/root/david/3': {\n    path: '/root/david/3',\n    type: 'file'\n  },\n  '/root/jslancer': {\n    path: '/root/jslancer',\n    type: 'folder',\n    children: ['/root/jslancer/132', '/root/jslancer/12']\n  },\n  '/root/jslancer/132': {\n    path: '/root/jslancer/132',\n    type: 'file'\n  },\n  '/root/jslancer/12': {\n    path: '/root/jslancer/12',\n    type: 'file'\n  }\n};\n\nconst onClick = (_ref) => {\n  let {\n    event,\n    props\n  } = _ref;\n  console.log(event, props);\n  console.log(props);\n}; // create your menu first\n\n\nconst MyAwesomeMenu = props => {\n  const {\n    node\n  } = props;\n  return React.createElement(Menu, {\n    node: node,\n    id: \"menu_id\",\n    style: {\n      border: '1px solid purple',\n      display: 'inline-block'\n    }\n  }, React.createElement(Item, {\n    node: node,\n    onClick: (event, node) => onClick(event, node)\n  }, \"Lorem\"), React.createElement(Item, {\n    onClick: onClick\n  }, \"Ipsum\"), React.createElement(Separator, null), React.createElement(Item, {\n    disabled: true\n  }, \"Dolor\"), React.createElement(Separator, null), React.createElement(Submenu, {\n    label: \"Foobar\"\n  }, React.createElement(Item, {\n    onClick: onClick\n  }, \"Foo\"), React.createElement(Item, {\n    onClick: onClick\n  }, \"Bar\")));\n};\n\nclass Tree extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getRootNodes = () => {\n      const {\n        nodes\n      } = this.state;\n      return values(nodes).filter(node => node.isRoot === true);\n    };\n\n    this.getChildNodes = node => {\n      const {\n        nodes\n      } = this.state;\n      if (!node.children) return [];\n      return node.children.map(path => nodes[path]);\n    };\n\n    this.onToggle = node => {\n      const {\n        nodes\n      } = this.state;\n      nodes[node.path].isOpen = !node.isOpen;\n      this.setState({\n        nodes\n      });\n    };\n\n    this.onNodeSelect = node => {\n      const {\n        onSelect\n      } = this.props;\n      this.setState = {\n        nodeType: node.type //onSelect(node);\n\n      };\n      return node;\n    };\n\n    this.setMenuProperties = (event, node) => {\n      const {\n        nodes\n      } = this.state;\n      const clientX = event.clientX;\n      const clientY = event.clientY;\n      nodes[node.path].isClicked = true;\n      this.setState = {\n        nodes: nodes,\n        clientX: clientX,\n        clientY: clientY,\n        isClicked: false\n      }; //  this.setState({\n      //      clicked: true,\n      //      displayMenu: true,\n      //      clientX: event.clientX,\n      //      clientY: event.clientY,\n      //      nodeType: node.type,\n      //      nodeName: getNodeLabel(node)\n      //  });\n    };\n\n    this.state = {\n      nodes: data,\n      clientX: undefined,\n      clientY: undefined,\n      isClicked: false // displayMenu: false,\n      // clientX: 0,\n      // clientY: 0,\n      // nodeType: \"\"\n      // this.setMenuProperties = this.setMenuProperties.bind(this);\n\n    };\n  } // state = {\n  //   nodes: data,\n  // };\n\n\n  componentDidMount() {\n    this.setState = {\n      displayMenu: true\n    };\n  }\n\n  // setMenuProperties = (event, node) => {\n  //   //if(this.state.displayMenu === true){\n  //   this.setState=({\n  //     displayMenu: true,\n  //     clientX: event.clientX,\n  //     clientY: event.clientY,\n  //     nodeType: node.type\n  //   });\n  // //}\n  //   console.log(\"event\" + event);\n  //  // return false;\n  // }\n  render() {\n    const rootNodes = this.getRootNodes();\n    return React.createElement(React.Fragment, null, rootNodes.map(node => // <div>\n    // <div onContextMenu={this.setMenuProperties(event, this.onNodeSelect(node))}>\n    React.createElement(TreeNodeNew // onClick ={this.setMenuProperties(event, this.onNodeSelect(rootNodes[0]))}\n    , {\n      displayMenu: this.state.displayMenu,\n      node: node,\n      getChildNodes: this.getChildNodes,\n      onToggle: this.onToggle,\n      onNodeSelect: this.onNodeSelect,\n      setMenuProperties: this.setMenuProperties\n    }) // <div>\n\n    /* {this.state.displayMenu === false ?\n             <CustomMenu\n               //node={node}\n               nodeType={this.state.nodeType}\n               //nodeType = {node.type}\n               onNodeSelect={this.onNodeSelect}\n               getChildNodes={this.getChildNodes}\n               clientX={this.state.clientX}\n               clientY={this.state.clientY}\n    type={this.type} /> :\"\"} */\n    // </div>\n    // </div>\n    ));\n  }\n\n}\n\nTree.propTypes = {\n  onSelect: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["imports/ui/Tree.js"],"names":["module","export","default","Tree","React","Component","link","v","values","PropTypes","TreeNodeNew","Menu","Item","Separator","Submenu","MenuProvider","CustomMenu","data","path","type","isRoot","children","onClick","event","props","console","log","MyAwesomeMenu","node","border","display","constructor","getRootNodes","nodes","state","filter","getChildNodes","map","onToggle","isOpen","setState","onNodeSelect","onSelect","nodeType","setMenuProperties","clientX","clientY","isClicked","undefined","componentDidMount","displayMenu","render","rootNodes","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport values from 'lodash/values';\nimport PropTypes from 'prop-types';\n\nimport TreeNodeNew from './TreeNodeNew';\n//import ClickHandler from './ClickHandler';\nimport { Menu, Item, Separator, Submenu, MenuProvider } from 'react-contexify';\n//import 'react-contexify/dist/ReactContexify.min.css';\nimport CustomMenu from './CustomMenu';\n\nconst data = {\n  '/root': {\n    path: '/root',\n    type: 'folder',\n    isRoot: true,\n    children: ['/root/david', '/root/jslancer'],\n  },\n  '/root/david': {\n    path: '/root/david',\n    type: 'folder',\n    children: ['/root/david/1', '/root/david/2', '/root/david/3'],\n  },\n  '/root/david/1': {\n    path: '/root/david/1',\n    type: 'file'\n  },\n  '/root/david/2': {\n    path: '/root/david/2',\n    type: 'file'\n  },\n  '/root/david/3': {\n    path: '/root/david/3',\n    type: 'file'\n  },\n  '/root/jslancer': {\n    path: '/root/jslancer',\n    type: 'folder',\n    children: ['/root/jslancer/132', '/root/jslancer/12'],\n  },\n  '/root/jslancer/132': {\n    path: '/root/jslancer/132',\n    type: 'file'\n  },\n  '/root/jslancer/12': {\n    path: '/root/jslancer/12',\n    type: 'file'\n  },\n};\n\nconst onClick = ({ event, props }) => {\n  console.log(event, props);\n  console.log(props);\n}\n// create your menu first\nconst MyAwesomeMenu = (props) => {\n  const { node } = props;\n  return (\n\n    <Menu node={node} id='menu_id' style={{ border: '1px solid purple', display: 'inline-block' }}>\n      <Item node={node} onClick={(event, node) => onClick(event, node)}>Lorem</Item>\n      <Item onClick={onClick}>Ipsum</Item>\n      <Separator />\n      <Item disabled>Dolor</Item>\n      <Separator />\n      <Submenu label=\"Foobar\">\n        <Item onClick={onClick}>Foo</Item>\n        <Item onClick={onClick}>Bar</Item>\n      </Submenu>\n    </Menu>\n  )\n};\n\nexport default class Tree extends Component {\n  constructor(props){\n      super(props);\n      this.state = {\n          nodes: data,\n          clientX: undefined,\n          clientY: undefined,\n          isClicked: false\n          // displayMenu: false,\n          // clientX: 0,\n          // clientY: 0,\n          // nodeType: \"\"\n      }\n     // this.setMenuProperties = this.setMenuProperties.bind(this);\n  }\n\n  // state = {\n  //   nodes: data,\n  // };\n\n  componentDidMount(){\n    this.setState =({\n      displayMenu:true\n    })\n  }\n\n  getRootNodes = () => {\n    const { nodes } = this.state;\n    return values(nodes).filter(node => node.isRoot === true);\n  }\n\n  getChildNodes = (node) => {\n    const { nodes } = this.state;\n    if (!node.children) return [];\n    return node.children.map(path => nodes[path]);\n  }\n\n  onToggle = (node) => {\n    const { nodes } = this.state;\n    nodes[node.path].isOpen = !node.isOpen;\n    this.setState({ nodes });\n  }\n\n  onNodeSelect = node => {\n    const { onSelect } = this.props;\n    this.setState={nodeType: node.type}\n    //onSelect(node);\n    return node;\n  }\n\n\n  setMenuProperties = (event,node) => {\n    const { nodes } = this.state;\n    const clientX = event.clientX;\n    const clientY = event.clientY;\n    nodes[node.path].isClicked = true;\n    this.setState = { \n      nodes: nodes,\n      clientX: clientX,\n      clientY: clientY,\n      isClicked: false\n    \n    };\n    //  this.setState({\n    //      clicked: true,\n    //      displayMenu: true,\n    //      clientX: event.clientX,\n    //      clientY: event.clientY,\n    //      nodeType: node.type,\n    //      nodeName: getNodeLabel(node)\n    //  });\n }\n\n\n\n  // setMenuProperties = (event, node) => {\n  //   //if(this.state.displayMenu === true){\n  //   this.setState=({\n  //     displayMenu: true,\n  //     clientX: event.clientX,\n  //     clientY: event.clientY,\n  //     nodeType: node.type\n  //   });\n  // //}\n  //   console.log(\"event\" + event);\n  //  // return false;\n  // }\n\n  render() {\n    const rootNodes = this.getRootNodes();\n    return (\n<React.Fragment>\n\n{\n\n\n      rootNodes.map(node => (\n        // <div>\n          // <div onContextMenu={this.setMenuProperties(event, this.onNodeSelect(node))}>\n          <TreeNodeNew\n            // onClick ={this.setMenuProperties(event, this.onNodeSelect(rootNodes[0]))}\n            displayMenu={this.state.displayMenu}\n            node={node}\n            getChildNodes={this.getChildNodes}\n            onToggle={this.onToggle}\n            onNodeSelect={this.onNodeSelect}\n            setMenuProperties={this.setMenuProperties}\n\n\n          />\n          // <div>\n     /* {this.state.displayMenu === false ?\n              <CustomMenu\n                //node={node}\n                nodeType={this.state.nodeType}\n                //nodeType = {node.type}\n                onNodeSelect={this.onNodeSelect}\n                getChildNodes={this.getChildNodes}\n                clientX={this.state.clientX}\n                clientY={this.state.clientY}\n     type={this.type} /> :\"\"} */\n\n          // </div>\n        // </div>\n\n\n      ))}\n{/* <div>\n     \n              <CustomMenu\n                //node={node}\n                nodeType={this.state.nodeType}\n                onNodeSelect={this.onNodeSelect}\n                getChildNodes={this.getChildNodes}\n                clientX={this.state.clientX}\n                clientY={this.state.clientY}\n                type={this.type} /> \n\n          </div> */}\n      {/* </div> */}\n      </React.Fragment>\n\n    )\n  }\n}\n\nTree.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n};"]},"sourceType":"script","hash":"4f7a4fa4a406ce44dbf071e269ba5fef0c74f8fe"}
