{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/rosyazad/code/root/imports/ui/TreeNode.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/ui/TreeNode.js","filename":"/Users/rosyazad/code/root/imports/ui/TreeNode.js","passPerPreset":false,"envName":"development","cwd":"/Users/rosyazad/code/root","root":"/Users/rosyazad/code/root","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/rosyazad/code/root/imports/ui/TreeNode.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/TreeNode.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _taggedTemplateLiteralLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\"));\n\nfunction _templateObject2() {\n  var data = (0, _taggedTemplateLiteralLoose2.default)([\"\\n  font-size: 12px;\\n  margin-right: \", \"px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = (0, _taggedTemplateLiteralLoose2.default)([\"\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  padding: 5px 8px;\\n  padding-left: \", \"px;\\n\\n  &:hover {\\n    background: lightgray;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight;\nmodule.link(\"react-icons/fa\", {\n  FaFile: function (v) {\n    FaFile = v;\n  },\n  FaFolder: function (v) {\n    FaFolder = v;\n  },\n  FaFolderOpen: function (v) {\n    FaFolderOpen = v;\n  },\n  FaChevronDown: function (v) {\n    FaChevronDown = v;\n  },\n  FaChevronRight: function (v) {\n    FaChevronRight = v;\n  }\n}, 1);\nvar styled;\nmodule.link(\"styled-components\", {\n  \"default\": function (v) {\n    styled = v;\n  }\n}, 2);\nvar last;\nmodule.link(\"lodash/last\", {\n  \"default\": function (v) {\n    last = v;\n  }\n}, 3);\nvar PropTypes;\nmodule.link(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 4);\n\nvar getPaddingLeft = function (level, type) {\n  var paddingLeft = level * 20;\n  if (type === 'file') paddingLeft += 20;\n  return paddingLeft;\n};\n\nvar StyledTreeNode = styled.div(_templateObject(), function (props) {\n  return getPaddingLeft(props.level, props.type);\n});\nvar NodeIcon = styled.div(_templateObject2(), function (props) {\n  return props.marginRight ? props.marginRight : 5;\n});\n\nvar getNodeLabel = function (node) {\n  return last(node.path.split('/'));\n};\n\nvar TreeNode = function (props) {\n  var node = props.node,\n      getChildNodes = props.getChildNodes,\n      level = props.level,\n      onToggle = props.onToggle,\n      onNodeSelect = props.onNodeSelect;\n  return React.createElement(React.Fragment, null, React.createElement(StyledTreeNode, {\n    level: level,\n    type: node.type\n  }, React.createElement(NodeIcon, {\n    onClick: function () {\n      return onToggle(node);\n    }\n  }, node.type === 'folder' && (node.isOpen ? React.createElement(FaChevronDown, null) : React.createElement(FaChevronRight, null))), React.createElement(NodeIcon, {\n    marginRight: 10\n  }, node.type === 'file' && React.createElement(FaFile, null), node.type === 'folder' && node.isOpen === true && React.createElement(FaFolderOpen, null), node.type === 'folder' && !node.isOpen && React.createElement(FaFolder, null)), React.createElement(\"span\", {\n    role: \"button\"\n  }, getNodeLabel(node))), node.isOpen && getChildNodes(node).map(function (childNode) {\n    return React.createElement(TreeNode, (0, _extends2.default)({}, props, {\n      node: childNode,\n      level: level + 1\n    }));\n  }));\n};\n\nTreeNode.propTypes = {\n  node: PropTypes.object.isRequired,\n  getChildNodes: PropTypes.func.isRequired,\n  level: PropTypes.number.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  onNodeSelect: PropTypes.func.isRequired\n};\nTreeNode.defaultProps = {\n  level: 0\n};\nmodule.exportDefault(TreeNode);","map":{"version":3,"sources":["imports/ui/TreeNode.js"],"names":["React","module","link","v","FaFile","FaFolder","FaFolderOpen","FaChevronDown","FaChevronRight","styled","last","PropTypes","getPaddingLeft","level","type","paddingLeft","StyledTreeNode","div","props","NodeIcon","marginRight","getNodeLabel","node","path","split","TreeNode","getChildNodes","onToggle","onNodeSelect","isOpen","map","childNode","propTypes","object","isRequired","func","number","defaultProps","exportDefault"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport last from 'lodash/last';\nimport PropTypes from 'prop-types';\n\nconst getPaddingLeft = (level, type) => {\n  let paddingLeft = level * 20;\n  if (type === 'file') paddingLeft += 20;\n  return paddingLeft;\n}\n\nconst StyledTreeNode = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 5px 8px;\n  padding-left: ${props => getPaddingLeft(props.level, props.type)}px;\n\n  &:hover {\n    background: lightgray;\n  }\n`;\n\nconst NodeIcon = styled.div`\n  font-size: 12px;\n  margin-right: ${props => props.marginRight ? props.marginRight : 5}px;\n`;\n\nconst getNodeLabel = (node) => last(node.path.split('/'));\n\nconst TreeNode = (props) => {\n  const { node, getChildNodes, level, onToggle, onNodeSelect } = props;\n\n  return (\n    <React.Fragment>\n      <StyledTreeNode level={level} type={node.type}>\n        <NodeIcon onClick={() => onToggle(node)}>\n          { node.type === 'folder' && (node.isOpen ? <FaChevronDown /> : <FaChevronRight />) }\n        </NodeIcon>\n        \n        <NodeIcon marginRight={10}>\n          { node.type === 'file' && <FaFile /> }\n          { node.type === 'folder' && node.isOpen === true && <FaFolderOpen /> }\n          { node.type === 'folder' && !node.isOpen && <FaFolder /> }\n        </NodeIcon>\n        \n\n        <span role=\"button\" >\n          { getNodeLabel(node) }\n        </span>\n      </StyledTreeNode>\n\n      { node.isOpen && getChildNodes(node).map(childNode => (\n        <TreeNode \n          {...props}\n          node={childNode}          \n          level={level + 1}\n        />\n      ))}\n    </React.Fragment>\n  );\n}\n\nTreeNode.propTypes = {\n  node: PropTypes.object.isRequired,\n  getChildNodes: PropTypes.func.isRequired,\n  level: PropTypes.number.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  onNodeSelect: PropTypes.func.isRequired,\n};\n\nTreeNode.defaultProps = {\n  level: 0,\n};\n\nexport default TreeNode;\n"]},"sourceType":"script","hash":"2a2e2f29c8db9f0493da9d71ca56960c66b32fc4"}
