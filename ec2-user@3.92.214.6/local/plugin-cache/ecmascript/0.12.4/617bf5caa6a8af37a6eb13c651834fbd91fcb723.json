{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/rosyazad/code/root/imports/ui/TreeNodeClass.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/ui/TreeNodeClass.js","filename":"/Users/rosyazad/code/root/imports/ui/TreeNodeClass.js","passPerPreset":false,"envName":"development","cwd":"/Users/rosyazad/code/root","root":"/Users/rosyazad/code/root","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/rosyazad/code/root/imports/ui/TreeNodeClass.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/TreeNodeClass.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nmodule.export({\n  default: () => Tree\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight;\nmodule.link(\"react-icons/fa\", {\n  FaFile(v) {\n    FaFile = v;\n  },\n\n  FaFolder(v) {\n    FaFolder = v;\n  },\n\n  FaFolderOpen(v) {\n    FaFolderOpen = v;\n  },\n\n  FaChevronDown(v) {\n    FaChevronDown = v;\n  },\n\n  FaChevronRight(v) {\n    FaChevronRight = v;\n  }\n\n}, 1);\nlet styled;\nmodule.link(\"styled-components\", {\n  default(v) {\n    styled = v;\n  }\n\n}, 2);\nlet last;\nmodule.link(\"lodash/last\", {\n  default(v) {\n    last = v;\n  }\n\n}, 3);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 4);\nlet Menu, Item, Separator, Submenu, MenuProvider;\nmodule.link(\"react-contexify\", {\n  Menu(v) {\n    Menu = v;\n  },\n\n  Item(v) {\n    Item = v;\n  },\n\n  Separator(v) {\n    Separator = v;\n  },\n\n  Submenu(v) {\n    Submenu = v;\n  },\n\n  MenuProvider(v) {\n    MenuProvider = v;\n  }\n\n}, 5);\nlet CustomMenu;\nmodule.link(\"./CustomMenu\", {\n  default(v) {\n    CustomMenu = v;\n  }\n\n}, 6);\n\nclass Tree extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setMenuProperties = event => {\n      this.setState({\n        displayMenu: true\n      });\n      console.log(\"event\" + event);\n    };\n\n    this.state = {\n      displayMenu: false\n    };\n    const {\n      node,\n      getChildNodes,\n      level,\n      onToggle,\n      onNodeSelect\n    } = props;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(StyledTreeNode, {\n      level: level,\n      type: node.type\n    }, React.createElement(\"div\", {\n      role: \"button\",\n      onClick: () => onNodeSelect(node),\n      contenteditable: \"true\",\n      \"margin-right\": \"20px\"\n    }, getNodeLabel(node)), node.type === 'folder' ? React.createElement(\"div\", {\n      \"margin-left\": \"50px\"\n    }, \"Range\") : \"\", node.type === 'folder' ? React.createElement(\"div\", {\n      onContextMenu: this.setMenuProperties\n    }, \" \") : null, React.createElement(\"div\", null, {\n      displayMenu\n    } === true ? React.createElement(CustomMenu, null) : null)), getChildNodes(node).map(childNode => React.createElement(TreeNode, (0, _extends2.default)({}, props, {\n      node: childNode,\n      level: level + 1\n    }))));\n  }\n\n}","map":{"version":3,"sources":["imports/ui/TreeNodeClass.js"],"names":["module","export","default","Tree","React","link","v","FaFile","FaFolder","FaFolderOpen","FaChevronDown","FaChevronRight","styled","last","PropTypes","Menu","Item","Separator","Submenu","MenuProvider","CustomMenu","Component","constructor","props","setMenuProperties","event","setState","displayMenu","console","log","state","node","getChildNodes","level","onToggle","onNodeSelect","render","type","getNodeLabel","map","childNode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport last from 'lodash/last';\nimport PropTypes from 'prop-types';\nimport { Menu, Item, Separator, Submenu, MenuProvider } from 'react-contexify';\nimport CustomMenu from './CustomMenu';\n\n\nexport default class Tree extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            displayMenu : false\n        }\n        const { node, getChildNodes, level, onToggle, onNodeSelect } = props;\n    }\n\n    setMenuProperties =(event) => {\n        this.setState({\n            displayMenu: true\n        });\n        console.log(\"event\" +event);\n    }\n        render(){\n        return (\n            <React.Fragment>\n            <StyledTreeNode level={level} type={node.type}>\n                {/* <NodeIcon onClick={() => onToggle(node)}>\n                    {node.type === 'folder' && (node.isOpen ? <FaChevronDown /> : <FaChevronRight />)}\n                </NodeIcon>\n\n                <NodeIcon marginRight={10}>\n                    {node.type === 'file' && <FaFile />}\n                    {node.type === 'folder' && node.isOpen === true && <FaFolderOpen />}\n                    {node.type === 'folder' && !node.isOpen && <FaFolder />}\n                </NodeIcon> */}\n\n\n                <div role=\"button\" onClick={() => onNodeSelect(node)}\n                    contenteditable=\"true\" margin-right=\"20px\">\n                    {getNodeLabel(node)}\n                </div>\n                {node.type === 'folder' ? <div margin-left=\"50px\">Range</div> : \"\"}\n\n                {node.type === 'folder' ?\n                <div onContextMenu = {this.setMenuProperties}> </div>: null}\n                <div>\n                { {displayMenu} === true ? \n                <CustomMenu />\n               : null}\n              </div>\n\n            </StyledTreeNode>\n            { getChildNodes(node).map(childNode => (\n\n\n                    <TreeNode\n                        {...props}\n                        node={childNode}\n                        level={level + 1}\n                    />\n\n               \n            ))}\n\n              \n\n        </React.Fragment>\n    );\n    }\n\n}"]},"sourceType":"script","hash":"617bf5caa6a8af37a6eb13c651834fbd91fcb723"}
