{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/rosyazad/code/root/imports/ui/TreeNodeClass.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/ui/TreeNodeClass.js","filename":"/Users/rosyazad/code/root/imports/ui/TreeNodeClass.js","passPerPreset":false,"envName":"development","cwd":"/Users/rosyazad/code/root","root":"/Users/rosyazad/code/root","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/rosyazad/code/root/imports/ui/TreeNodeClass.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/TreeNodeClass.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\n\nfunction _templateObject2() {\n  const data = (0, _taggedTemplateLiteral2.default)([\"\\n  font-size: 12px;\\n  margin-right: \", \"px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = (0, _taggedTemplateLiteral2.default)([\"\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  padding: 5px 8px;\\n  margin-left: \", \"px;\\n  border-left: \", \"px solid rgba(128, 4, 77, 0.3);\\n  \\n\\n  &:hover {\\n    background: lightgray;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nmodule.export({\n  default: () => TreeNodeClass\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight;\nmodule.link(\"react-icons/fa\", {\n  FaFile(v) {\n    FaFile = v;\n  },\n\n  FaFolder(v) {\n    FaFolder = v;\n  },\n\n  FaFolderOpen(v) {\n    FaFolderOpen = v;\n  },\n\n  FaChevronDown(v) {\n    FaChevronDown = v;\n  },\n\n  FaChevronRight(v) {\n    FaChevronRight = v;\n  }\n\n}, 1);\nlet styled;\nmodule.link(\"styled-components\", {\n  default(v) {\n    styled = v;\n  }\n\n}, 2);\nlet last;\nmodule.link(\"lodash/last\", {\n  default(v) {\n    last = v;\n  }\n\n}, 3);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 4);\nlet Menu, Item, Separator, Submenu, MenuProvider;\nmodule.link(\"react-contexify\", {\n  Menu(v) {\n    Menu = v;\n  },\n\n  Item(v) {\n    Item = v;\n  },\n\n  Separator(v) {\n    Separator = v;\n  },\n\n  Submenu(v) {\n    Submenu = v;\n  },\n\n  MenuProvider(v) {\n    MenuProvider = v;\n  }\n\n}, 5);\nlet CustomMenu;\nmodule.link(\"./CustomMenu\", {\n  default(v) {\n    CustomMenu = v;\n  }\n\n}, 6);\n\nconst getPaddingLeft = (level, type) => {\n  let paddingLeft = level * 20;\n  if (type === 'file') paddingLeft += 20;\n  return paddingLeft;\n};\n\nconst StyledTreeNode = styled.div(_templateObject(), props => getPaddingLeft(props.level, props.type), props => props.level > 1 ? 2 : 0);\nconst NodeIcon = styled.div(_templateObject2(), props => props.marginRight ? props.marginRight : 5);\nvar i = 0;\n\nconst getNodeLabel = node => last(node.path.split('/'));\n\nclass TreeNodeClass extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setMenuProperties = (e, node) => {\n      // const i = 0;\n      //e.stopPropagation();\n      if (e.path[0].innerText == getNodeLabel(node)) {\n        this.setState({\n          clicked: true,\n          displayMenu: true,\n          clientX: event.clientX,\n          clientY: event.clientY,\n          nodeType: node.type\n        });\n      }\n\n      console.log(\"event\" + event);\n      return false; //console.log(\"displayMenu\" + displayMenu);\n    };\n\n    this.state = {\n      clicked: false,\n      displayMenu: false,\n      clientX: 0,\n      clientY: 0,\n      nodeType: \"\"\n    };\n    this.setMenuProperties = this.setMenuProperties.bind(this);\n    const {\n      node: _node,\n      getChildNodes,\n      level,\n      onToggle,\n      onNodeSelect\n    } = props;\n  }\n\n  render() {\n    //const { node, getChildNodes, level, onToggle, onNodeSelect } = props;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      onContextMenu: () => this.setMenuProperties(event, this.props.onNodeSelect(this.props.node))\n    }, React.createElement(StyledTreeNode, {\n      level: this.props.level,\n      type: this.props.node.type\n    }, React.createElement(\"div\", {\n      // role=\"button\" onClick={() => this.props.onNodeSelect(this.props.node)}\n      contentEditable: \"true\",\n      \"margin-right\": \"20px\"\n    }, getNodeLabel(this.props.node)), this.props.node.type === 'folder' ? React.createElement(\"div\", {\n      \"margin-left\": \"50px\"\n    }, \"Range\") : \"\"), this.props.getChildNodes(this.props.node).map(childNode => React.createElement(\"div\", null, React.createElement(TreeNodeClass // onContextMenu={(event, childNode) => this.setMenuProperties(event, childNode)}\n    , (0, _extends2.default)({}, this.props, {\n      node: childNode,\n      level: this.props.level + 1\n    })))), React.createElement(\"div\", null, this.props.node.type === 'folder' ? React.createElement(CustomMenu, {\n      nodeType: this.state.nodeType,\n      clicked: this.state.clicked,\n      node: this.props.node,\n      type: this.props.node.type,\n      clientX: this.state.clientX,\n      clientY: this.state.clientY,\n      displayMenu: this.state.displayMenu\n    }) : null)));\n  }\n\n}\n\nTreeNodeClass.propTypes = {\n  node: PropTypes.object.isRequired,\n  getChildNodes: PropTypes.func.isRequired,\n  level: PropTypes.number.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  onNodeSelect: PropTypes.func.isRequired\n};\nTreeNodeClass.defaultProps = {\n  level: 0\n};","map":{"version":3,"sources":["imports/ui/TreeNodeClass.js"],"names":["module","export","default","TreeNodeClass","React","link","v","FaFile","FaFolder","FaFolderOpen","FaChevronDown","FaChevronRight","styled","last","PropTypes","Menu","Item","Separator","Submenu","MenuProvider","CustomMenu","getPaddingLeft","level","type","paddingLeft","StyledTreeNode","div","props","NodeIcon","marginRight","i","getNodeLabel","node","path","split","Component","constructor","setMenuProperties","e","innerText","setState","clicked","displayMenu","clientX","event","clientY","nodeType","console","log","state","bind","getChildNodes","onToggle","onNodeSelect","render","map","childNode","propTypes","object","isRequired","func","number","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport last from 'lodash/last';\nimport PropTypes from 'prop-types';\nimport { Menu, Item, Separator, Submenu, MenuProvider } from 'react-contexify';\nimport CustomMenu from './CustomMenu';\n\nconst getPaddingLeft = (level, type) => {\n    let paddingLeft = level * 20;\n    if (type === 'file') paddingLeft += 20;\n    return paddingLeft;\n}\n\nconst StyledTreeNode = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 5px 8px;\n  margin-left: ${props => getPaddingLeft(props.level, props.type)}px;\n  border-left: ${props => (props.level > 1 ? 2 : 0)}px solid rgba(128, 4, 77, 0.3);\n  \n\n  &:hover {\n    background: lightgray;\n  }\n`;\n\nconst NodeIcon = styled.div`\n  font-size: 12px;\n  margin-right: ${props => props.marginRight ? props.marginRight : 5}px;\n`;\n\nvar i =0;\nconst getNodeLabel = (node) => last(node.path.split('/'));\nexport default class TreeNodeClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clicked: false,\n            displayMenu: false,\n            clientX: 0,\n            clientY: 0,\n            nodeType: \"\"\n        }\n        this.setMenuProperties = this.setMenuProperties.bind(this);\n        const { node, getChildNodes, level, onToggle, onNodeSelect } = props;\n    }\n\n    \n    setMenuProperties = (e, node) => {\n       // const i = 0;\n       \n       //e.stopPropagation();\n       if(e.path[0].innerText == getNodeLabel(node)){\n        this.setState({\n            clicked: true,\n            displayMenu: true,\n            clientX: event.clientX,\n            clientY: event.clientY,\n            nodeType: node.type\n        });\n    }\n    \n        console.log(\"event\" + event);\n        return false;\n        //console.log(\"displayMenu\" + displayMenu);\n    }\n    render() {\n        //const { node, getChildNodes, level, onToggle, onNodeSelect } = props;\n        return (\n            <React.Fragment>\n                <div onContextMenu={() => this.setMenuProperties(event, this.props.onNodeSelect(this.props.node))}>\n                    <StyledTreeNode level={this.props.level} type={this.props.node.type}>\n                        {/* <NodeIcon onClick={() => onToggle(node)}>\n                    {node.type === 'folder' && (node.isOpen ? <FaChevronDown /> : <FaChevronRight />)}\n                </NodeIcon>\n\n                <NodeIcon marginRight={10}>\n                    {node.type === 'file' && <FaFile />}\n                    {node.type === 'folder' && node.isOpen === true && <FaFolderOpen />}\n                    {node.type === 'folder' && !node.isOpen && <FaFolder />}\n                </NodeIcon> */}\n\n                        <div\n                            // role=\"button\" onClick={() => this.props.onNodeSelect(this.props.node)}\n                            contentEditable=\"true\" margin-right=\"20px\">\n                            {getNodeLabel(this.props.node)}\n                        </div>\n                        {this.props.node.type === 'folder' ? <div margin-left=\"50px\">Range</div> : \"\"}\n\n\n                        {/* {this.props.node.type === 'folder' ?\n                <div onContextMenu = {(event) => setMenuProperties(event)}> </div>: \"\"} */}\n                        {/* <div>\n                            {this.state.displayMenu === true && this.props.node.type === 'folder'  && this.state.clicked?\n                                <CustomMenu \n                                node ={this.props.node}\n                                type = {this.props.node.type}\n                                clientX = {this.state.clientX}\n                                clientY ={this.state.clientY}\n                                displayMenu = {this.state.displayMenu} />\n                                : null}\n                        </div> */}\n\n\n                    </StyledTreeNode>\n                {/* </div> */}\n                {/* <div onContextMenu={this.setMenuProperties}> */}\n                {this.props.getChildNodes(this.props.node).map(childNode => (\n                    <div>\n                        {/* <div onContextMenu={(event, childNode) => this.setMenuProperties(event, childNode)}></div>  */}\n                        <TreeNodeClass\n                            // onContextMenu={(event, childNode) => this.setMenuProperties(event, childNode)}\n                            {...this.props}\n                            node={childNode}\n                            level={this.props.level + 1}\n                        />\n                    </div>\n\n                ))}\n                <div>\n                    {this.props.node.type === 'folder'  ?\n                        <CustomMenu\n                            nodeType={this.state.nodeType}\n                            clicked={this.state.clicked}\n                            node={this.props.node}\n                            type={this.props.node.type}\n                            clientX={this.state.clientX}\n                            clientY={this.state.clientY}\n                            displayMenu={this.state.displayMenu} />\n                        : null}\n                </div>\n                </div>\n\n\n\n            </React.Fragment>\n        );\n    }\n\n}\nTreeNodeClass.propTypes = {\n    node: PropTypes.object.isRequired,\n    getChildNodes: PropTypes.func.isRequired,\n    level: PropTypes.number.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    onNodeSelect: PropTypes.func.isRequired,\n};\n\nTreeNodeClass.defaultProps = {\n    level: 0,\n};"]},"sourceType":"script","hash":"91dad1889438078edbaef074080103f639de41c2"}
