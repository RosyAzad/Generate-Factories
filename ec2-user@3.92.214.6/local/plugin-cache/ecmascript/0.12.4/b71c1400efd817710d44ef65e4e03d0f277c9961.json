{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/rosyazad/code/root/imports/ui/TreeNode.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/ui/TreeNode.js","filename":"/Users/rosyazad/code/root/imports/ui/TreeNode.js","passPerPreset":false,"envName":"development","cwd":"/Users/rosyazad/code/root","root":"/Users/rosyazad/code/root","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/rosyazad/code/root/imports/ui/TreeNode.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/TreeNode.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _taggedTemplateLiteralLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\"));\n\nfunction _templateObject2() {\n  var data = (0, _taggedTemplateLiteralLoose2.default)([\"\\n  font-size: 12px;\\n  margin-right: \", \"px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = (0, _taggedTemplateLiteralLoose2.default)([\"\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  padding: 5px 8px;\\n  margin-left: \", \"px;\\n  border-left: \", \"px solid rgba(128, 4, 77, 0.3);\\n  \\n\\n  &:hover {\\n    background: lightgray;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight;\nmodule.link(\"react-icons/fa\", {\n  FaFile: function (v) {\n    FaFile = v;\n  },\n  FaFolder: function (v) {\n    FaFolder = v;\n  },\n  FaFolderOpen: function (v) {\n    FaFolderOpen = v;\n  },\n  FaChevronDown: function (v) {\n    FaChevronDown = v;\n  },\n  FaChevronRight: function (v) {\n    FaChevronRight = v;\n  }\n}, 1);\nvar styled;\nmodule.link(\"styled-components\", {\n  \"default\": function (v) {\n    styled = v;\n  }\n}, 2);\nvar last;\nmodule.link(\"lodash/last\", {\n  \"default\": function (v) {\n    last = v;\n  }\n}, 3);\nvar PropTypes;\nmodule.link(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 4);\nvar Menu, Item, Separator, Submenu, MenuProvider;\nmodule.link(\"react-contexify\", {\n  Menu: function (v) {\n    Menu = v;\n  },\n  Item: function (v) {\n    Item = v;\n  },\n  Separator: function (v) {\n    Separator = v;\n  },\n  Submenu: function (v) {\n    Submenu = v;\n  },\n  MenuProvider: function (v) {\n    MenuProvider = v;\n  }\n}, 5);\nvar CustomMenu;\nmodule.link(\"../ui/CustomMenu\", {\n  \"default\": function (v) {\n    CustomMenu = v;\n  }\n}, 6);\n\nvar onClick = function (_ref) {\n  var event = _ref.event,\n      props = _ref.props;\n  console.log(event, props);\n  console.log(props);\n}; // create your menu first\n\n\nvar MyAwesomeMenu = function (props) {\n  var node = props.node;\n  return React.createElement(Menu, {\n    node: node,\n    id: \"menu_id\",\n    style: {\n      border: '1px solid purple',\n      display: 'inline-block'\n    }\n  }, React.createElement(Item, {\n    node: node,\n    onClick: function (event, node) {\n      return onClick(event, node);\n    }\n  }, \"Lorem\"), React.createElement(Item, {\n    onClick: onClick\n  }, \"Ipsum\"), React.createElement(Separator, null), React.createElement(Item, {\n    disabled: true\n  }, \"Dolor\"), React.createElement(Separator, null), React.createElement(Submenu, {\n    label: \"Foobar\"\n  }, React.createElement(Item, {\n    onClick: onClick\n  }, \"Foo\"), React.createElement(Item, {\n    onClick: onClick\n  }, \"Bar\")));\n};\n\nvar getPaddingLeft = function (level, type) {\n  var paddingLeft = level * 20;\n  if (type === 'file') paddingLeft += 20;\n  return paddingLeft;\n}; // const StyledTreeNode = styled.div`\n//   display: flex;\n//   flex-direction: row;\n//   align-items: center;\n//   padding: 5px 8px;\n//   padding-left: ${props => getPaddingLeft(props.level, props.type)}px;\n//   border-left: ${props => (props.level > 1 ? 2 : 0)}px solid rgba(128, 4, 77, 0.3);\n//   &:hover {\n//     background: lightgray;\n//   }\n// `;\n\n\nvar StyledTreeNode = styled.div(_templateObject(), function (props) {\n  return getPaddingLeft(props.level, props.type);\n}, function (props) {\n  return props.level > 1 ? 2 : 0;\n});\nvar NodeIcon = styled.div(_templateObject2(), function (props) {\n  return props.marginRight ? props.marginRight : 5;\n});\n\nvar getNodeLabel = function (node) {\n  return last(node.path.split('/'));\n};\n\nvar TreeNode = function (props) {\n  var node = props.node,\n      getChildNodes = props.getChildNodes,\n      level = props.level,\n      onToggle = props.onToggle,\n      onNodeSelect = props.onNodeSelect,\n      displayMenu = props.displayMenu;\n  return React.createElement(React.Fragment, null, React.createElement(StyledTreeNode, {\n    level: level,\n    type: node.type\n  }, React.createElement(NodeIcon, {\n    onClick: function () {\n      return onToggle(node);\n    }\n  }, node.type === 'folder' && (node.isOpen ? React.createElement(FaChevronDown, null) : React.createElement(FaChevronRight, null))), React.createElement(NodeIcon, {\n    marginRight: 10\n  }, node.type === 'file' && React.createElement(FaFile, null), node.type === 'folder' && node.isOpen === true && React.createElement(FaFolderOpen, null), node.type === 'folder' && !node.isOpen && React.createElement(FaFolder, null)), React.createElement(\"div\", {\n    role: \"button\",\n    onClick: function () {\n      return onNodeSelect(node);\n    },\n    contenteditable: \"true\",\n    \"margin-right\": \"20px\"\n  }, getNodeLabel(node)), node.type === 'folder' ? React.createElement(\"div\", {\n    \"margin-left\": \"50px\"\n  }, \"Range\") : \"\"), node.isOpen && getChildNodes(node).map(function (childNode) {\n    return React.createElement(TreeNode, (0, _extends2.default)({}, props, {\n      node: childNode,\n      level: level + 1\n    }));\n  }), React.createElement(\"div\", null, {\n    displayMenu: displayMenu\n  } === true && node.type === \"folder\" ? React.createElement(CustomMenu, null) : null));\n};\n\nTreeNode.propTypes = {\n  node: PropTypes.object.isRequired,\n  getChildNodes: PropTypes.func.isRequired,\n  level: PropTypes.number.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  onNodeSelect: PropTypes.func.isRequired\n};\nTreeNode.defaultProps = {\n  level: 0\n};\nmodule.exportDefault(TreeNode);","map":{"version":3,"sources":["imports/ui/TreeNode.js"],"names":["React","module","link","v","FaFile","FaFolder","FaFolderOpen","FaChevronDown","FaChevronRight","styled","last","PropTypes","Menu","Item","Separator","Submenu","MenuProvider","CustomMenu","onClick","event","props","console","log","MyAwesomeMenu","node","border","display","getPaddingLeft","level","type","paddingLeft","StyledTreeNode","div","NodeIcon","marginRight","getNodeLabel","path","split","TreeNode","getChildNodes","onToggle","onNodeSelect","displayMenu","isOpen","map","childNode","propTypes","object","isRequired","func","number","defaultProps","exportDefault"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport last from 'lodash/last';\nimport PropTypes from 'prop-types';\nimport { Menu, Item, Separator, Submenu, MenuProvider } from 'react-contexify';\nimport CustomMenu from '../ui/CustomMenu';\n\n\nconst onClick = ({ event, props }) => {\n    console.log(event, props);\n    console.log(props);\n}\n// create your menu first\nconst MyAwesomeMenu = (props) => {\n    const { node } = props;\n    return (\n\n        <Menu node={node} id='menu_id' style={{ border: '1px solid purple', display: 'inline-block' }}>\n            <Item node={node} onClick={(event, node) => onClick(event, node)}>Lorem</Item>\n            <Item onClick={onClick}>Ipsum</Item>\n            <Separator />\n            <Item disabled>Dolor</Item>\n            <Separator />\n            <Submenu label=\"Foobar\">\n                <Item onClick={onClick}>Foo</Item>\n                <Item onClick={onClick}>Bar</Item>\n            </Submenu>\n        </Menu>\n    )\n};\n\nconst getPaddingLeft = (level, type) => {\n    let paddingLeft = level * 20;\n    if (type === 'file') paddingLeft += 20;\n    return paddingLeft;\n}\n\n// const StyledTreeNode = styled.div`\n//   display: flex;\n//   flex-direction: row;\n//   align-items: center;\n//   padding: 5px 8px;\n//   padding-left: ${props => getPaddingLeft(props.level, props.type)}px;\n//   border-left: ${props => (props.level > 1 ? 2 : 0)}px solid rgba(128, 4, 77, 0.3);\n\n\n//   &:hover {\n//     background: lightgray;\n//   }\n// `;\n\nconst StyledTreeNode = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 5px 8px;\n  margin-left: ${props => getPaddingLeft(props.level, props.type)}px;\n  border-left: ${props => (props.level > 1 ? 2 : 0)}px solid rgba(128, 4, 77, 0.3);\n  \n\n  &:hover {\n    background: lightgray;\n  }\n`;\n\nconst NodeIcon = styled.div`\n  font-size: 12px;\n  margin-right: ${props => props.marginRight ? props.marginRight : 5}px;\n`;\n\nconst getNodeLabel = (node) => last(node.path.split('/'));\n\nconst TreeNode = (props) => {\n    const { node, getChildNodes, level, onToggle, onNodeSelect,displayMenu } = props;\n\n    return (\n        <React.Fragment>\n            <StyledTreeNode level={level} type={node.type}>\n                <NodeIcon onClick={() => onToggle(node)}>\n                    {node.type === 'folder' && (node.isOpen ? <FaChevronDown /> : <FaChevronRight />)}\n                </NodeIcon>\n\n                <NodeIcon marginRight={10}>\n                    {node.type === 'file' && <FaFile />}\n                    {node.type === 'folder' && node.isOpen === true && <FaFolderOpen />}\n                    {node.type === 'folder' && !node.isOpen && <FaFolder />}\n                </NodeIcon>\n\n\n                <div role=\"button\" onClick={() => onNodeSelect(node)}\n                    contenteditable=\"true\" margin-right=\"20px\">\n                    {getNodeLabel(node)}\n                </div>\n                {node.type === 'folder' ? <div margin-left=\"50px\">Range</div> : \"\"}\n\n            </StyledTreeNode>\n            {node.isOpen && getChildNodes(node).map(childNode => (\n\n                \n                    <TreeNode\n                        {...props}\n                        node={childNode}\n                        level={level + 1}\n                    />\n\n            ))}\n\n              <div>\n               {{displayMenu} === true && node.type === \"folder\" ? (\n                <CustomMenu  ></CustomMenu>\n              ) : null}\n              </div>\n\n        </React.Fragment>\n    );\n}\n\nTreeNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    getChildNodes: PropTypes.func.isRequired,\n    level: PropTypes.number.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    onNodeSelect: PropTypes.func.isRequired,\n};\n\nTreeNode.defaultProps = {\n    level: 0,\n};\n\nexport default TreeNode;\n"]},"sourceType":"script","hash":"b71c1400efd817710d44ef65e4e03d0f277c9961"}
