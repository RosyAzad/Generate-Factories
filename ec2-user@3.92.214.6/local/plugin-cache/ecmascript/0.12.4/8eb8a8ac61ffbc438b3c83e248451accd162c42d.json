{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/rosyazad/code/root/imports/ui/TreeNodeClass.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/ui/TreeNodeClass.js","filename":"/Users/rosyazad/code/root/imports/ui/TreeNodeClass.js","passPerPreset":false,"envName":"development","cwd":"/Users/rosyazad/code/root","root":"/Users/rosyazad/code/root","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/rosyazad/code/root/imports/ui/TreeNodeClass.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/TreeNodeClass.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nmodule.export({\n  \"default\": function () {\n    return TreeNodeClass;\n  }\n});\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight;\nmodule.link(\"react-icons/fa\", {\n  FaFile: function (v) {\n    FaFile = v;\n  },\n  FaFolder: function (v) {\n    FaFolder = v;\n  },\n  FaFolderOpen: function (v) {\n    FaFolderOpen = v;\n  },\n  FaChevronDown: function (v) {\n    FaChevronDown = v;\n  },\n  FaChevronRight: function (v) {\n    FaChevronRight = v;\n  }\n}, 1);\nvar styled;\nmodule.link(\"styled-components\", {\n  \"default\": function (v) {\n    styled = v;\n  }\n}, 2);\nvar last;\nmodule.link(\"lodash/last\", {\n  \"default\": function (v) {\n    last = v;\n  }\n}, 3);\nvar PropTypes;\nmodule.link(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 4);\nvar Menu, Item, Separator, Submenu, MenuProvider;\nmodule.link(\"react-contexify\", {\n  Menu: function (v) {\n    Menu = v;\n  },\n  Item: function (v) {\n    Item = v;\n  },\n  Separator: function (v) {\n    Separator = v;\n  },\n  Submenu: function (v) {\n    Submenu = v;\n  },\n  MenuProvider: function (v) {\n    MenuProvider = v;\n  }\n}, 5);\nvar CustomMenu;\nmodule.link(\"./CustomMenu\", {\n  \"default\": function (v) {\n    CustomMenu = v;\n  }\n}, 6);\n\nvar TreeNodeClass =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(TreeNodeClass, _Component);\n\n  function TreeNodeClass(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    _this.setMenuProperties = function (event) {\n      _this.setState({\n        displayMenu: true\n      });\n\n      console.log(\"event\" + event);\n    };\n\n    _this.state = {\n      displayMenu: false\n    };\n    var node = props.node,\n        getChildNodes = props.getChildNodes,\n        level = props.level,\n        onToggle = props.onToggle,\n        onNodeSelect = props.onNodeSelect;\n    return _this;\n  }\n\n  var _proto = TreeNodeClass.prototype;\n\n  _proto.render = function () {\n    function render() {\n      return React.createElement(React.Fragment, null, React.createElement(StyledTreeNode, {\n        level: level,\n        type: node.type\n      }, React.createElement(\"div\", {\n        role: \"button\",\n        onClick: function () {\n          return onNodeSelect(node);\n        },\n        contenteditable: \"true\",\n        \"margin-right\": \"20px\"\n      }, getNodeLabel(node)), node.type === 'folder' ? React.createElement(\"div\", {\n        \"margin-left\": \"50px\"\n      }, \"Range\") : \"\", node.type === 'folder' ? React.createElement(\"div\", {\n        onContextMenu: this.setMenuProperties\n      }, \" \") : null, React.createElement(\"div\", null, {\n        displayMenu: displayMenu\n      } === true ? React.createElement(CustomMenu, null) : null)), getChildNodes(node).map(function (childNode) {\n        return React.createElement(TreeNode, (0, _extends2.default)({}, props, {\n          node: childNode,\n          level: level + 1\n        }));\n      }));\n    }\n\n    return render;\n  }();\n\n  return TreeNodeClass;\n}(Component);","map":{"version":3,"sources":["imports/ui/TreeNodeClass.js"],"names":["module","export","TreeNodeClass","React","link","v","FaFile","FaFolder","FaFolderOpen","FaChevronDown","FaChevronRight","styled","last","PropTypes","Menu","Item","Separator","Submenu","MenuProvider","CustomMenu","props","setMenuProperties","event","setState","displayMenu","console","log","state","node","getChildNodes","level","onToggle","onNodeSelect","render","type","getNodeLabel","map","childNode","Component"],"mappings":";;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAAC,aAAQ;AAAA,WAAIC,aAAJ;AAAA;AAAT,CAAd;AAA2C,IAAIC,KAAJ;AAAUH,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAAA,uBAASC,CAAT,EAAW;AAACF,IAAAA,KAAK,GAACE,CAAN;AAAQ;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAIC,MAAJ,EAAWC,QAAX,EAAoBC,YAApB,EAAiCC,aAAjC,EAA+CC,cAA/C;AAA8DV,MAAM,CAACI,IAAP,CAAY,gBAAZ,EAA6B;AAACE,EAAAA,MAAD,YAAQD,CAAR,EAAU;AAACC,IAAAA,MAAM,GAACD,CAAP;AAAS,GAApB;AAAqBE,EAAAA,QAArB,YAA8BF,CAA9B,EAAgC;AAACE,IAAAA,QAAQ,GAACF,CAAT;AAAW,GAA5C;AAA6CG,EAAAA,YAA7C,YAA0DH,CAA1D,EAA4D;AAACG,IAAAA,YAAY,GAACH,CAAb;AAAe,GAA5E;AAA6EI,EAAAA,aAA7E,YAA2FJ,CAA3F,EAA6F;AAACI,IAAAA,aAAa,GAACJ,CAAd;AAAgB,GAA9G;AAA+GK,EAAAA,cAA/G,YAA8HL,CAA9H,EAAgI;AAACK,IAAAA,cAAc,GAACL,CAAf;AAAiB;AAAlJ,CAA7B,EAAiL,CAAjL;AAAoL,IAAIM,MAAJ;AAAWX,MAAM,CAACI,IAAP,CAAY,mBAAZ,EAAgC;AAAA,uBAASC,CAAT,EAAW;AAACM,IAAAA,MAAM,GAACN,CAAP;AAAS;AAArB,CAAhC,EAAuD,CAAvD;AAA0D,IAAIO,IAAJ;AAASZ,MAAM,CAACI,IAAP,CAAY,aAAZ,EAA0B;AAAA,uBAASC,CAAT,EAAW;AAACO,IAAAA,IAAI,GAACP,CAAL;AAAO;AAAnB,CAA1B,EAA+C,CAA/C;AAAkD,IAAIQ,SAAJ;AAAcb,MAAM,CAACI,IAAP,CAAY,YAAZ,EAAyB;AAAA,uBAASC,CAAT,EAAW;AAACQ,IAAAA,SAAS,GAACR,CAAV;AAAY;AAAxB,CAAzB,EAAmD,CAAnD;AAAsD,IAAIS,IAAJ,EAASC,IAAT,EAAcC,SAAd,EAAwBC,OAAxB,EAAgCC,YAAhC;AAA6ClB,MAAM,CAACI,IAAP,CAAY,iBAAZ,EAA8B;AAACU,EAAAA,IAAD,YAAMT,CAAN,EAAQ;AAACS,IAAAA,IAAI,GAACT,CAAL;AAAO,GAAhB;AAAiBU,EAAAA,IAAjB,YAAsBV,CAAtB,EAAwB;AAACU,IAAAA,IAAI,GAACV,CAAL;AAAO,GAAhC;AAAiCW,EAAAA,SAAjC,YAA2CX,CAA3C,EAA6C;AAACW,IAAAA,SAAS,GAACX,CAAV;AAAY,GAA1D;AAA2DY,EAAAA,OAA3D,YAAmEZ,CAAnE,EAAqE;AAACY,IAAAA,OAAO,GAACZ,CAAR;AAAU,GAAhF;AAAiFa,EAAAA,YAAjF,YAA8Fb,CAA9F,EAAgG;AAACa,IAAAA,YAAY,GAACb,CAAb;AAAe;AAAhH,CAA9B,EAAgJ,CAAhJ;AAAmJ,IAAIc,UAAJ;AAAenB,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAAA,uBAASC,CAAT,EAAW;AAACc,IAAAA,UAAU,GAACd,CAAX;AAAa;AAAzB,CAA3B,EAAsD,CAAtD;;IASltBH,a;;;;;AACjB,yBAAYkB,KAAZ,EAAkB;AAAA;;AACd,kCAAMA,KAAN;;AADc,UAQlBC,iBARkB,GAQC,UAACC,KAAD,EAAW;AAC1B,YAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAE;AADH,OAAd;;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAASJ,KAArB;AACH,KAbiB;;AAEd,UAAKK,KAAL,GAAY;AACRH,MAAAA,WAAW,EAAG;AADN,KAAZ;AAFc,QAKNI,IALM,GAKiDR,KALjD,CAKNQ,IALM;AAAA,QAKAC,aALA,GAKiDT,KALjD,CAKAS,aALA;AAAA,QAKeC,KALf,GAKiDV,KALjD,CAKeU,KALf;AAAA,QAKsBC,QALtB,GAKiDX,KALjD,CAKsBW,QALtB;AAAA,QAKgCC,YALhC,GAKiDZ,KALjD,CAKgCY,YALhC;AAAA;AAMjB;;;;SAQGC,M;sBAAQ;AACR,aACI,oBAAC,KAAD,CAAO,QAAP,QACA,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAEH,KAAvB;AAA8B,QAAA,IAAI,EAAEF,IAAI,CAACM;AAAzC,SAYI;AAAK,QAAA,IAAI,EAAC,QAAV;AAAmB,QAAA,OAAO,EAAE;AAAA,iBAAMF,YAAY,CAACJ,IAAD,CAAlB;AAAA,SAA5B;AACI,QAAA,eAAe,EAAC,MADpB;AAC2B,wBAAa;AADxC,SAEKO,YAAY,CAACP,IAAD,CAFjB,CAZJ,EAgBKA,IAAI,CAACM,IAAL,KAAc,QAAd,GAAyB;AAAK,uBAAY;AAAjB,iBAAzB,GAA+D,EAhBpE,EAkBKN,IAAI,CAACM,IAAL,KAAc,QAAd,GACD;AAAK,QAAA,aAAa,EAAI,KAAKb;AAA3B,aADC,GACsD,IAnB3D,EAoBI,iCACE;AAACG,QAAAA,WAAW,EAAXA;AAAD,YAAkB,IAAlB,GACF,oBAAC,UAAD,OADE,GAED,IAHD,CApBJ,CADA,EA4BEK,aAAa,CAACD,IAAD,CAAb,CAAoBQ,GAApB,CAAwB,UAAAC,SAAS;AAAA,eAG3B,oBAAC,QAAD,6BACQjB,KADR;AAEI,UAAA,IAAI,EAAEiB,SAFV;AAGI,UAAA,KAAK,EAAEP,KAAK,GAAG;AAHnB,WAH2B;AAAA,OAAjC,CA5BF,CADJ;AA6CH;;;;;;EA7DsCQ,S","sourcesContent":["import React from 'react';\nimport { FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport last from 'lodash/last';\nimport PropTypes from 'prop-types';\nimport { Menu, Item, Separator, Submenu, MenuProvider } from 'react-contexify';\nimport CustomMenu from './CustomMenu';\n\n\nexport default class TreeNodeClass extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            displayMenu : false\n        }\n        const { node, getChildNodes, level, onToggle, onNodeSelect } = props;\n    }\n\n    setMenuProperties =(event) => {\n        this.setState({\n            displayMenu: true\n        });\n        console.log(\"event\" +event);\n    }\n        render(){\n        return (\n            <React.Fragment>\n            <StyledTreeNode level={level} type={node.type}>\n                {/* <NodeIcon onClick={() => onToggle(node)}>\n                    {node.type === 'folder' && (node.isOpen ? <FaChevronDown /> : <FaChevronRight />)}\n                </NodeIcon>\n\n                <NodeIcon marginRight={10}>\n                    {node.type === 'file' && <FaFile />}\n                    {node.type === 'folder' && node.isOpen === true && <FaFolderOpen />}\n                    {node.type === 'folder' && !node.isOpen && <FaFolder />}\n                </NodeIcon> */}\n\n\n                <div role=\"button\" onClick={() => onNodeSelect(node)}\n                    contenteditable=\"true\" margin-right=\"20px\">\n                    {getNodeLabel(node)}\n                </div>\n                {node.type === 'folder' ? <div margin-left=\"50px\">Range</div> : \"\"}\n\n                {node.type === 'folder' ?\n                <div onContextMenu = {this.setMenuProperties}> </div>: null}\n                <div>\n                { {displayMenu} === true ? \n                <CustomMenu />\n               : null}\n              </div>\n\n            </StyledTreeNode>\n            { getChildNodes(node).map(childNode => (\n\n\n                    <TreeNode\n                        {...props}\n                        node={childNode}\n                        level={level + 1}\n                    />\n\n               \n            ))}\n\n              \n\n        </React.Fragment>\n    );\n    }\n\n}"]},"sourceType":"script","hash":"8eb8a8ac61ffbc438b3c83e248451accd162c42d"}
