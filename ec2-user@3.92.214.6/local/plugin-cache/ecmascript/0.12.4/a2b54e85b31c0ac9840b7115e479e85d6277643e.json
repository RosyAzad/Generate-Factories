{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/rosyazad/code/root/imports/ui/Tree.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/ui/Tree.js","filename":"/Users/rosyazad/code/root/imports/ui/Tree.js","passPerPreset":false,"envName":"development","cwd":"/Users/rosyazad/code/root","root":"/Users/rosyazad/code/root","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/rosyazad/code/root/imports/ui/Tree.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/Tree.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nmodule.export({\n  \"default\": function () {\n    return Tree;\n  }\n});\nvar React, Component;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar values;\nmodule.link(\"lodash/values\", {\n  \"default\": function (v) {\n    values = v;\n  }\n}, 1);\nvar PropTypes;\nmodule.link(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 2);\nvar TreeNodeNew;\nmodule.link(\"./TreeNodeNew\", {\n  \"default\": function (v) {\n    TreeNodeNew = v;\n  }\n}, 3);\nvar Menu, Item, Separator, Submenu, MenuProvider;\nmodule.link(\"react-contexify\", {\n  Menu: function (v) {\n    Menu = v;\n  },\n  Item: function (v) {\n    Item = v;\n  },\n  Separator: function (v) {\n    Separator = v;\n  },\n  Submenu: function (v) {\n    Submenu = v;\n  },\n  MenuProvider: function (v) {\n    MenuProvider = v;\n  }\n}, 4);\nvar CustomMenu;\nmodule.link(\"./CustomMenu\", {\n  \"default\": function (v) {\n    CustomMenu = v;\n  }\n}, 5);\nvar data = {\n  '/root': {\n    path: '/root',\n    type: 'folder',\n    isRoot: true,\n    children: ['/root/david', '/root/jslancer']\n  },\n  '/root/david': {\n    path: '/root/david',\n    type: 'folder',\n    children: ['/root/david/1', '/root/david/2', '/root/david/3']\n  },\n  '/root/david/1': {\n    path: '/root/david/1',\n    type: 'file'\n  },\n  '/root/david/2': {\n    path: '/root/david/2',\n    type: 'file'\n  },\n  '/root/david/3': {\n    path: '/root/david/3',\n    type: 'file'\n  },\n  '/root/jslancer': {\n    path: '/root/jslancer',\n    type: 'folder',\n    children: ['/root/jslancer/132', '/root/jslancer/12']\n  },\n  '/root/jslancer/132': {\n    path: '/root/jslancer/132',\n    type: 'file'\n  },\n  '/root/jslancer/12': {\n    path: '/root/jslancer/12',\n    type: 'file'\n  }\n};\n\nvar onClick = function (_ref) {\n  var event = _ref.event,\n      props = _ref.props;\n  console.log(event, props);\n  console.log(props);\n}; // create your menu first\n\n\nvar MyAwesomeMenu = function (props) {\n  var node = props.node;\n  return React.createElement(Menu, {\n    node: node,\n    id: \"menu_id\",\n    style: {\n      border: '1px solid purple',\n      display: 'inline-block'\n    }\n  }, React.createElement(Item, {\n    node: node,\n    onClick: function (event, node) {\n      return onClick(event, node);\n    }\n  }, \"Lorem\"), React.createElement(Item, {\n    onClick: onClick\n  }, \"Ipsum\"), React.createElement(Separator, null), React.createElement(Item, {\n    disabled: true\n  }, \"Dolor\"), React.createElement(Separator, null), React.createElement(Submenu, {\n    label: \"Foobar\"\n  }, React.createElement(Item, {\n    onClick: onClick\n  }, \"Foo\"), React.createElement(Item, {\n    onClick: onClick\n  }, \"Bar\")));\n};\n\nvar Tree =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(Tree, _Component);\n\n  function Tree(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    _this.getRootNodes = function () {\n      var nodes = _this.state.nodes;\n      return values(nodes).filter(function (node) {\n        return node.isRoot === true;\n      });\n    };\n\n    _this.getChildNodes = function (node) {\n      var nodes = _this.state.nodes;\n      if (!node.children) return [];\n      return node.children.map(function (path) {\n        return nodes[path];\n      });\n    };\n\n    _this.onToggle = function (node) {\n      var nodes = _this.state.nodes;\n      nodes[node.path].isOpen = !node.isOpen;\n\n      _this.setState({\n        nodes: nodes\n      });\n    };\n\n    _this.onNodeSelect = function (node) {\n      var onSelect = _this.props.onSelect;\n      _this.setState = {\n        nodeType: node.type //onSelect(node);\n\n      };\n      return node;\n    };\n\n    _this.setMenuProperties = function (event, node) {\n      var nodes = _this.state.nodes;\n      var clientX = event.clientX;\n      var clientY = event.clientY;\n      nodes[node.path].isClicked = true;\n      _this.setState = {\n        nodes: nodes,\n        clientX: clientX,\n        clientY: clientY,\n        isClicked: true,\n        nodeType: node.type\n      };\n      return state; //  this.setState({\n      //      clicked: true,\n      //      displayMenu: true,\n      //      clientX: event.clientX,\n      //      clientY: event.clientY,\n      //      nodeType: node.type,\n      //      nodeName: getNodeLabel(node)\n      //  });\n    };\n\n    _this.state = {\n      nodes: data,\n      clientX: undefined,\n      clientY: undefined,\n      isClicked: false // displayMenu: false,\n      // clientX: 0,\n      // clientY: 0,\n      // nodeType: \"\"\n      // this.setMenuProperties = this.setMenuProperties.bind(this);\n\n    };\n    return _this;\n  } // state = {\n  //   nodes: data,\n  // };\n\n\n  var _proto = Tree.prototype;\n\n  _proto.componentDidMount = function () {\n    function componentDidMount() {\n      this.setState = {\n        displayMenu: true\n      };\n    }\n\n    return componentDidMount;\n  }();\n\n  // setMenuProperties = (event, node) => {\n  //   //if(this.state.displayMenu === true){\n  //   this.setState=({\n  //     displayMenu: true,\n  //     clientX: event.clientX,\n  //     clientY: event.clientY,\n  //     nodeType: node.type\n  //   });\n  // //}\n  //   console.log(\"event\" + event);\n  //  // return false;\n  // }\n  _proto.render = function () {\n    function render() {\n      var _this2 = this;\n\n      var rootNodes = this.getRootNodes();\n      return React.createElement(React.Fragment, null, rootNodes.map(function (node) {\n        return React.createElement(\"div\", null, React.createElement(TreeNodeNew // onClick ={this.setMenuProperties(event, this.onNodeSelect(rootNodes[0]))}\n        , {\n          displayMenu: _this2.state.displayMenu,\n          node: node,\n          getChildNodes: _this2.getChildNodes,\n          onToggle: _this2.onToggle,\n          onNodeSelect: _this2.onNodeSelect,\n          setMenuProperties: _this2.setMenuProperties\n        }), React.createElement(CustomMenu //node={node}\n        // nodeType={this.state.nodeType}\n        // onNodeSelect={this.onNodeSelect}\n        // getChildNodes={this.getChildNodes}\n        , {\n          clientX: \"undefined\",\n          clientY: \"undefined\",\n          nodeType: \"folder\"\n        })) // </div>\n        ;\n      }));\n    }\n\n    return render;\n  }();\n\n  return Tree;\n}(Component);\n\nTree.propTypes = {\n  onSelect: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["imports/ui/Tree.js"],"names":["module","export","Tree","React","Component","link","v","values","PropTypes","TreeNodeNew","Menu","Item","Separator","Submenu","MenuProvider","CustomMenu","data","path","type","isRoot","children","onClick","event","props","console","log","MyAwesomeMenu","node","border","display","getRootNodes","nodes","state","filter","getChildNodes","map","onToggle","isOpen","setState","onNodeSelect","onSelect","nodeType","setMenuProperties","clientX","clientY","isClicked","undefined","componentDidMount","displayMenu","render","rootNodes","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport values from 'lodash/values';\nimport PropTypes from 'prop-types';\n\nimport TreeNodeNew from './TreeNodeNew';\n//import ClickHandler from './ClickHandler';\nimport { Menu, Item, Separator, Submenu, MenuProvider } from 'react-contexify';\n//import 'react-contexify/dist/ReactContexify.min.css';\nimport CustomMenu from './CustomMenu';\n\nconst data = {\n  '/root': {\n    path: '/root',\n    type: 'folder',\n    isRoot: true,\n    children: ['/root/david', '/root/jslancer'],\n  },\n  '/root/david': {\n    path: '/root/david',\n    type: 'folder',\n    children: ['/root/david/1', '/root/david/2', '/root/david/3'],\n  },\n  '/root/david/1': {\n    path: '/root/david/1',\n    type: 'file'\n  },\n  '/root/david/2': {\n    path: '/root/david/2',\n    type: 'file'\n  },\n  '/root/david/3': {\n    path: '/root/david/3',\n    type: 'file'\n  },\n  '/root/jslancer': {\n    path: '/root/jslancer',\n    type: 'folder',\n    children: ['/root/jslancer/132', '/root/jslancer/12'],\n  },\n  '/root/jslancer/132': {\n    path: '/root/jslancer/132',\n    type: 'file'\n  },\n  '/root/jslancer/12': {\n    path: '/root/jslancer/12',\n    type: 'file'\n  },\n};\n\nconst onClick = ({ event, props }) => {\n  console.log(event, props);\n  console.log(props);\n}\n// create your menu first\nconst MyAwesomeMenu = (props) => {\n  const { node } = props;\n  return (\n\n    <Menu node={node} id='menu_id' style={{ border: '1px solid purple', display: 'inline-block' }}>\n      <Item node={node} onClick={(event, node) => onClick(event, node)}>Lorem</Item>\n      <Item onClick={onClick}>Ipsum</Item>\n      <Separator />\n      <Item disabled>Dolor</Item>\n      <Separator />\n      <Submenu label=\"Foobar\">\n        <Item onClick={onClick}>Foo</Item>\n        <Item onClick={onClick}>Bar</Item>\n      </Submenu>\n    </Menu>\n  )\n};\n\nexport default class Tree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: data,\n      clientX: undefined,\n      clientY: undefined,\n      isClicked: false\n      // displayMenu: false,\n      // clientX: 0,\n      // clientY: 0,\n      // nodeType: \"\"\n    }\n    // this.setMenuProperties = this.setMenuProperties.bind(this);\n  }\n\n  // state = {\n  //   nodes: data,\n  // };\n\n  componentDidMount() {\n    this.setState = ({\n      displayMenu: true\n    })\n  }\n\n  getRootNodes = () => {\n    const { nodes } = this.state;\n    return values(nodes).filter(node => node.isRoot === true);\n  }\n\n  getChildNodes = (node) => {\n    const { nodes } = this.state;\n    if (!node.children) return [];\n    return node.children.map(path => nodes[path]);\n  }\n\n  onToggle = (node) => {\n    const { nodes } = this.state;\n    nodes[node.path].isOpen = !node.isOpen;\n    this.setState({ nodes });\n  }\n\n  onNodeSelect = node => {\n    const { onSelect } = this.props;\n    this.setState = { nodeType: node.type }\n    //onSelect(node);\n    return node;\n  }\n\n\n  setMenuProperties = (event, node) => {\n    const { nodes } = this.state;\n    const clientX = event.clientX;\n    const clientY = event.clientY;\n    nodes[node.path].isClicked = true;\n    this.setState = {\n      nodes: nodes,\n      clientX: clientX,\n      clientY: clientY,\n      isClicked: true,\n      nodeType: node.type\n\n    };\n    return state;\n    //  this.setState({\n    //      clicked: true,\n    //      displayMenu: true,\n    //      clientX: event.clientX,\n    //      clientY: event.clientY,\n    //      nodeType: node.type,\n    //      nodeName: getNodeLabel(node)\n    //  });\n  }\n\n\n\n  // setMenuProperties = (event, node) => {\n  //   //if(this.state.displayMenu === true){\n  //   this.setState=({\n  //     displayMenu: true,\n  //     clientX: event.clientX,\n  //     clientY: event.clientY,\n  //     nodeType: node.type\n  //   });\n  // //}\n  //   console.log(\"event\" + event);\n  //  // return false;\n  // }\n\n  render() {\n    const rootNodes = this.getRootNodes();\n    return (\n      <React.Fragment>\n\n        {\n\n\n          rootNodes.map(node => (\n\n            <div>\n              {/* <div onContextMenu={this.setMenuProperties(event, this.onNodeSelect(node))}> */}\n                <TreeNodeNew\n                  // onClick ={this.setMenuProperties(event, this.onNodeSelect(rootNodes[0]))}\n                  displayMenu={this.state.displayMenu}\n                  node={node}\n                  getChildNodes={this.getChildNodes}\n                  onToggle={this.onToggle}\n                  onNodeSelect={this.onNodeSelect}\n                  setMenuProperties={this.setMenuProperties}\n\n\n                />\n\n                \n                <CustomMenu\n                  //node={node}\n                  // nodeType={this.state.nodeType}\n                  // onNodeSelect={this.onNodeSelect}\n                  // getChildNodes={this.getChildNodes}\n                   clientX = 'undefined'\n                   clientY = 'undefined'\n                   nodeType='folder'\n                /> \n\n              </div>\n\n\n            // </div>\n\n\n\n\n          ))}\n        {/* <div>\n     \n              <CustomMenu\n                //node={node}\n                nodeType={this.state.nodeType}\n                onNodeSelect={this.onNodeSelect}\n                getChildNodes={this.getChildNodes}\n                clientX={this.state.clientX}\n                clientY={this.state.clientY}\n                type={this.type} /> \n\n          </div> */}\n        {/* </div> */}\n      </React.Fragment>\n\n    )\n  }\n}\n\nTree.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n};"]},"sourceType":"script","hash":"a2b54e85b31c0ac9840b7115e479e85d6277643e"}
